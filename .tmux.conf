#-- base settings --#
set -g default-terminal "screen-256color"
set -g display-time 3000  # message display-time in (ms)
set -sg escape-time 1      # waitting time after prefix in (ms)
set -g repeat-time 600   # watiting time for repeatabel key(ms)
set -g history-limit 65535
set -g base-index 1       # let window index begin with 1
setw -g pane-base-index 1
set -g allow-rename off

# reload config (prefix r)
bind r source ~/.tmux.conf \; display "Configuration reloaded!"

#-- bindkeys --#
# prefix key (Ctrl+k)
set -g prefix ^k
unbind ^b
bind C-k send-prefix  # click prefix twice to send C-k to some tools like vim.

# split window
unbind '"'
bind - splitw -v    # vertical split (prefix -)
unbind %
bind | splitw -h    # horizontal split (prefix |)

# select pane with hjkl
bind -r k selectp -U   # above (prefix k)
bind -r j selectp -D   # down (prefix j)
bind -r h selectp -L   # left (prefix h)
bind -r l selectp -R   # right (prefix l)

# display panes id and then type a number to jump to a pane
set -g display-panes-time 2000
bind / display-panes \; select-pane -t :.

# resize pane
bind -r K resizep -U 5    # upward (prefix Shift-k)
bind -r J resizep -D 5    # downward
bind -r H resizep -L 5    # to the left
bind -r L resizep -R 5    # to the right

# swap pane
bind ^u swapp -U   # swap with the previous pane (prefix Ctrl+u)
bind ^d swapp -D   # swap with the next pane (prefix Ctrl+d)

# switch window circularly
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# misc
bind e lastp       # select the last pane (prefix e)
bind ^e last       # select the last window (prefix Ctrl+e)
bind q killp       # kill pane (prefix q)
# kill window (prefix Ctrl+q)
bind ^q command-prompt -p "kill-window #W? (y/n)" kill-window

# copy mode
setw -g mode-keys vi
bind Escape copy-mode             # enter copy mode (prefix Escape)
bind -t vi-copy v begin-selection # start selecting text (v)
bind -t vi-copy y copy-selection  # copy selected text (y)
#unbind p
#bind p pasteb                    # paste buffer (prefix Ctrl+p)

# show help document
#bind ! splitw htop                                     # htop (prefix !)
bind m command-prompt "splitw 'exec man %%'"           # man (prefix m)
bind @ command-prompt "splitw 'exec perldoc -t -f %%'" # perl func (prefix @)

# mouse control
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on


#-------  statusbar ------#
set -g status-utf8 on
set -g status-interval 30 # display update time
set -g status-justify centre #alignment
set -g status-keys vi
#setw -g automatic-:ename off
# colors
set -g status-bg black
set -g status-fg white
# window list
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg green
setw -g window-status-current-attr bright

#event notification in other window
setw -g monitor-activity on
set -g visual-activity on

# spot at left
set-option -g status-left-length 30
set -g status-left '#[fg=green]Session_#S: #[fg=cyan]W#I#[fg=green].#[fg=yellow]P#P'
 
# spot at right
set -g status-right '#[fg=cyan]%d-%b %R '

#---  tmux command line style
set -g message-fg green
set -g message-bg black
set -g message-attr bright


# ------------Some useful command---------
# --------move window-------#
# tmux move-window -s [source-session]:[window] -t [target-session]
# tmux move-window -s work:1 -t work2
#
#------ --move pane------- -#
# join-pane -s [session]:[window].[pane] -t [session]:[window].[pane]
# join-pane -s 2.1   --> move window2.pane1 to current window
#
# output the pane record to a log file
#bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# maximum pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
# recover pane
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# synchronize panes
# set synchronize-panes on/off
bind a set synchronize-panes on
bind C-a set synchronize-panes off
